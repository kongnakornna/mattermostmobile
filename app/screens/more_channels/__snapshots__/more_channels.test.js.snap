// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MoreChannels should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MoreChannels
    actions={
      Object {
        "getChannels": [Function],
        "handleSelectChannel": [Function],
        "joinChannel": [Function],
        "removeHiddenDefaultChannel": [Function],
        "searchChannels": [Function],
        "setChannelDisplayName": [Function],
      }
    }
    canCreateChannels={true}
    channels={
      Array [
        Object {
          "display_name": "display_name",
          "id": "id",
          "name": "name",
        },
      ]
    }
    closeButton={Object {}}
    currentTeamId="current_team_id"
    currentUserId="current_user_id"
    navigator={
      Object {
        "dismissModal": [Function],
        "push": [Function],
        "setButtons": [Function],
        "setOnNavigatorEvent": [Function],
      }
    }
    requestStatus={Object {}}
    theme={
      Object {
        "centerChannelBg": "#aaa",
        "centerChannelColor": "#aaa",
        "sidebarHeaderBg": "#aaa",
        "sidebarHeaderTextColor": "#aaa",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Connect(StatusBar) />,
        <React.Fragment>
          <Component
            style={
              Object {
                "marginVertical": 5,
              }
            }
          >
            <SearchBarIos
              autoCapitalize="none"
              backgroundColor="transparent"
              blurOnSubmit={true}
              inputHeight={33}
              inputStyle={
                Object {
                  "backgroundColor": "rgba(170,170,170,0.2)",
                  "color": "#aaa",
                  "fontSize": 15,
                }
              }
              onBlur={[Function]}
              onCancelButtonPress={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              onSearchButtonPress={[Function]}
              onSelectionChange={[Function]}
              placeholderTextColor="rgba(170,170,170,0.5)"
              tintColorDelete="rgba(170,170,170,0.5)"
              tintColorSearch="rgba(170,170,170,0.5)"
              titleCancelColor="#aaa"
              value=""
            />
          </Component>
          <CustomList
            createSections={[Function]}
            data={
              Array [
                Object {
                  "display_name": "display_name",
                  "id": "id",
                  "name": "name",
                },
              ]
            }
            listInitialSize={10}
            listPageSize={10}
            listScrollRenderAheadDistance={50}
            loading={false}
            loadingText={
              Object {
                "defaultMessage": "Loading Channels...",
                "id": "mobile.loading_channels",
              }
            }
            onListEndReached={[Function]}
            onListEndReachedThreshold={50}
            onRowPress={[Function]}
            renderRow={[Function]}
            searching={false}
            selectable={false}
            showNoResults={false}
            showSections={false}
            theme={
              Object {
                "centerChannelBg": "#aaa",
                "centerChannelColor": "#aaa",
                "sidebarHeaderBg": "#aaa",
                "sidebarHeaderTextColor": "#aaa",
              }
            }
          />
        </React.Fragment>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Component
              style={
                Object {
                  "marginVertical": 5,
                }
              }
            >
              <SearchBarIos
                autoCapitalize="none"
                backgroundColor="transparent"
                blurOnSubmit={true}
                inputHeight={33}
                inputStyle={
                  Object {
                    "backgroundColor": "rgba(170,170,170,0.2)",
                    "color": "#aaa",
                    "fontSize": 15,
                  }
                }
                onBlur={[Function]}
                onCancelButtonPress={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onSearchButtonPress={[Function]}
                onSelectionChange={[Function]}
                placeholderTextColor="rgba(170,170,170,0.5)"
                tintColorDelete="rgba(170,170,170,0.5)"
                tintColorSearch="rgba(170,170,170,0.5)"
                titleCancelColor="#aaa"
                value=""
              />
            </Component>,
            <CustomList
              createSections={[Function]}
              data={
                Array [
                  Object {
                    "display_name": "display_name",
                    "id": "id",
                    "name": "name",
                  },
                ]
              }
              listInitialSize={10}
              listPageSize={10}
              listScrollRenderAheadDistance={50}
              loading={false}
              loadingText={
                Object {
                  "defaultMessage": "Loading Channels...",
                  "id": "mobile.loading_channels",
                }
              }
              onListEndReached={[Function]}
              onListEndReachedThreshold={50}
              onRowPress={[Function]}
              renderRow={[Function]}
              searching={false}
              selectable={false}
              showNoResults={false}
              showSections={false}
              theme={
                Object {
                  "centerChannelBg": "#aaa",
                  "centerChannelColor": "#aaa",
                  "sidebarHeaderBg": "#aaa",
                  "sidebarHeaderTextColor": "#aaa",
                }
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <SearchBarIos
                autoCapitalize="none"
                backgroundColor="transparent"
                blurOnSubmit={true}
                inputHeight={33}
                inputStyle={
                  Object {
                    "backgroundColor": "rgba(170,170,170,0.2)",
                    "color": "#aaa",
                    "fontSize": 15,
                  }
                }
                onBlur={[Function]}
                onCancelButtonPress={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onSearchButtonPress={[Function]}
                onSelectionChange={[Function]}
                placeholderTextColor="rgba(170,170,170,0.5)"
                tintColorDelete="rgba(170,170,170,0.5)"
                tintColorSearch="rgba(170,170,170,0.5)"
                titleCancelColor="#aaa"
                value=""
              />,
              "style": Object {
                "marginVertical": 5,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoCapitalize": "none",
                "backgroundColor": "transparent",
                "blurOnSubmit": true,
                "cancelTitle": undefined,
                "inputHeight": 33,
                "inputStyle": Object {
                  "backgroundColor": "rgba(170,170,170,0.2)",
                  "color": "#aaa",
                  "fontSize": 15,
                },
                "onBlur": [Function],
                "onCancelButtonPress": [Function],
                "onChangeText": [Function],
                "onFocus": [Function],
                "onSearchButtonPress": [Function],
                "onSelectionChange": [Function],
                "placeholder": undefined,
                "placeholderTextColor": "rgba(170,170,170,0.5)",
                "tintColorDelete": "rgba(170,170,170,0.5)",
                "tintColorSearch": "rgba(170,170,170,0.5)",
                "titleCancelColor": "#aaa",
                "value": "",
              },
              "ref": "search_bar",
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "createSections": [Function],
              "data": Array [
                Object {
                  "display_name": "display_name",
                  "id": "id",
                  "name": "name",
                },
              ],
              "listInitialSize": 10,
              "listPageSize": 10,
              "listScrollRenderAheadDistance": 50,
              "loading": false,
              "loadingText": Object {
                "defaultMessage": "Loading Channels...",
                "id": "mobile.loading_channels",
              },
              "onListEndReached": [Function],
              "onListEndReachedThreshold": 50,
              "onRowPress": [Function],
              "renderRow": [Function],
              "searching": false,
              "selectable": false,
              "showNoResults": false,
              "showSections": false,
              "theme": Object {
                "centerChannelBg": "#aaa",
                "centerChannelColor": "#aaa",
                "sidebarHeaderBg": "#aaa",
                "sidebarHeaderTextColor": "#aaa",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Symbol(react.fragment),
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Connect(StatusBar) />,
          <React.Fragment>
            <Component
              style={
                Object {
                  "marginVertical": 5,
                }
              }
            >
              <SearchBarIos
                autoCapitalize="none"
                backgroundColor="transparent"
                blurOnSubmit={true}
                inputHeight={33}
                inputStyle={
                  Object {
                    "backgroundColor": "rgba(170,170,170,0.2)",
                    "color": "#aaa",
                    "fontSize": 15,
                  }
                }
                onBlur={[Function]}
                onCancelButtonPress={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onSearchButtonPress={[Function]}
                onSelectionChange={[Function]}
                placeholderTextColor="rgba(170,170,170,0.5)"
                tintColorDelete="rgba(170,170,170,0.5)"
                tintColorSearch="rgba(170,170,170,0.5)"
                titleCancelColor="#aaa"
                value=""
              />
            </Component>
            <CustomList
              createSections={[Function]}
              data={
                Array [
                  Object {
                    "display_name": "display_name",
                    "id": "id",
                    "name": "name",
                  },
                ]
              }
              listInitialSize={10}
              listPageSize={10}
              listScrollRenderAheadDistance={50}
              loading={false}
              loadingText={
                Object {
                  "defaultMessage": "Loading Channels...",
                  "id": "mobile.loading_channels",
                }
              }
              onListEndReached={[Function]}
              onListEndReachedThreshold={50}
              onRowPress={[Function]}
              renderRow={[Function]}
              searching={false}
              selectable={false}
              showNoResults={false}
              showSections={false}
              theme={
                Object {
                  "centerChannelBg": "#aaa",
                  "centerChannelColor": "#aaa",
                  "sidebarHeaderBg": "#aaa",
                  "sidebarHeaderTextColor": "#aaa",
                }
              }
            />
          </React.Fragment>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "marginVertical": 5,
                  }
                }
              >
                <SearchBarIos
                  autoCapitalize="none"
                  backgroundColor="transparent"
                  blurOnSubmit={true}
                  inputHeight={33}
                  inputStyle={
                    Object {
                      "backgroundColor": "rgba(170,170,170,0.2)",
                      "color": "#aaa",
                      "fontSize": 15,
                    }
                  }
                  onBlur={[Function]}
                  onCancelButtonPress={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSearchButtonPress={[Function]}
                  onSelectionChange={[Function]}
                  placeholderTextColor="rgba(170,170,170,0.5)"
                  tintColorDelete="rgba(170,170,170,0.5)"
                  tintColorSearch="rgba(170,170,170,0.5)"
                  titleCancelColor="#aaa"
                  value=""
                />
              </Component>,
              <CustomList
                createSections={[Function]}
                data={
                  Array [
                    Object {
                      "display_name": "display_name",
                      "id": "id",
                      "name": "name",
                    },
                  ]
                }
                listInitialSize={10}
                listPageSize={10}
                listScrollRenderAheadDistance={50}
                loading={false}
                loadingText={
                  Object {
                    "defaultMessage": "Loading Channels...",
                    "id": "mobile.loading_channels",
                  }
                }
                onListEndReached={[Function]}
                onListEndReachedThreshold={50}
                onRowPress={[Function]}
                renderRow={[Function]}
                searching={false}
                selectable={false}
                showNoResults={false}
                showSections={false}
                theme={
                  Object {
                    "centerChannelBg": "#aaa",
                    "centerChannelColor": "#aaa",
                    "sidebarHeaderBg": "#aaa",
                    "sidebarHeaderTextColor": "#aaa",
                  }
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <SearchBarIos
                  autoCapitalize="none"
                  backgroundColor="transparent"
                  blurOnSubmit={true}
                  inputHeight={33}
                  inputStyle={
                    Object {
                      "backgroundColor": "rgba(170,170,170,0.2)",
                      "color": "#aaa",
                      "fontSize": 15,
                    }
                  }
                  onBlur={[Function]}
                  onCancelButtonPress={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSearchButtonPress={[Function]}
                  onSelectionChange={[Function]}
                  placeholderTextColor="rgba(170,170,170,0.5)"
                  tintColorDelete="rgba(170,170,170,0.5)"
                  tintColorSearch="rgba(170,170,170,0.5)"
                  titleCancelColor="#aaa"
                  value=""
                />,
                "style": Object {
                  "marginVertical": 5,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoCapitalize": "none",
                  "backgroundColor": "transparent",
                  "blurOnSubmit": true,
                  "cancelTitle": undefined,
                  "inputHeight": 33,
                  "inputStyle": Object {
                    "backgroundColor": "rgba(170,170,170,0.2)",
                    "color": "#aaa",
                    "fontSize": 15,
                  },
                  "onBlur": [Function],
                  "onCancelButtonPress": [Function],
                  "onChangeText": [Function],
                  "onFocus": [Function],
                  "onSearchButtonPress": [Function],
                  "onSelectionChange": [Function],
                  "placeholder": undefined,
                  "placeholderTextColor": "rgba(170,170,170,0.5)",
                  "tintColorDelete": "rgba(170,170,170,0.5)",
                  "tintColorSearch": "rgba(170,170,170,0.5)",
                  "titleCancelColor": "#aaa",
                  "value": "",
                },
                "ref": "search_bar",
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "createSections": [Function],
                "data": Array [
                  Object {
                    "display_name": "display_name",
                    "id": "id",
                    "name": "name",
                  },
                ],
                "listInitialSize": 10,
                "listPageSize": 10,
                "listScrollRenderAheadDistance": 50,
                "loading": false,
                "loadingText": Object {
                  "defaultMessage": "Loading Channels...",
                  "id": "mobile.loading_channels",
                },
                "onListEndReached": [Function],
                "onListEndReachedThreshold": 50,
                "onRowPress": [Function],
                "renderRow": [Function],
                "searching": false,
                "selectable": false,
                "showNoResults": false,
                "showSections": false,
                "theme": Object {
                  "centerChannelBg": "#aaa",
                  "centerChannelColor": "#aaa",
                  "sidebarHeaderBg": "#aaa",
                  "sidebarHeaderTextColor": "#aaa",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": Symbol(react.fragment),
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "context": Object {
      "intl": Object {
        "formatMessage": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "defaultMessage": "Create",
                "id": "mobile.create_channel",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Search",
                "id": "search_bar.search",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Cancel",
                "id": "mobile.post.cancel",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      },
    },
    "hydrateIn": undefined,
  },
}
`;
